OASISFormat: 0.4
Name: imap
Version: 0.10.0
Synopsis: IMAP client library for Lwt/Async/Unix
Authors: Nicolas Ojeda Bar
License: MIT
Plugins: DevFiles (0.4), META (0.4)
BuildTools: ocamlbuild

Flag all
  Description: build and install everything
  Default$: false

Flag gsasl
  Description: GNU SASL support
  Default$: flag(all)

Flag lwt
  Description: Lwt support
  Default$: flag(all)

Flag unix
  Description: Unix support
  Default$: true

Flag async
  Description: Async support
  Default$: flag(all)

Library imap
  Path: imap
  FindlibName: imap
  Pack: true
  Modules: Mime, Imap_types, Imap_set, Client, Auth, IO
  InternalModules: Sender, Parser, Response, Utils, Imap_uint
  BuildDepends: uint, str, cryptokit, ucorelib, sexplib, sexplib.syntax

Library imap_unix
  Build$: flag(unix)
  Install$: flag(unix)
  Path: unix
  FindlibName: unix
  FindlibParent: imap
  Modules: Imap_unix
  BuildDepends: imap, unix, ssl, cryptokit

Library imap_lwt
  Build$: flag(lwt)
  Install$: flag(lwt)
  Path: lwt
  FindlibName: lwt
  FindlibParent: imap
  Modules: Imap_lwt
  BuildDepends: imap, lwt, lwt.ssl, lwt.unix

Library imap_gsasl
  Build$: flag(gsasl)
  Install$: flag(gsasl)
  Path: gsasl
  FindlibName: gsasl
  FindlibParent: imap
  Modules: Imap_gsasl
  BuildDepends: imap, gsasl

Library imap_async
  Build$: flag(async)
  Install$: flag(async)
  Path: async
  FindlibName: async
  FindlibParent: imap
  Modules: Imap_async
  BuildDepends: threads, imap, async, async_ssl
  
Document imap
  Title: Imap docs
  Type: ocamlbuild (0.4)
  BuildTools+: ocamldoc
  Install: true
  XOCamlbuildPath: imap
  XOCamlbuildLibraries: imap

Executable test_parser
  Path: lib_test
  MainIs: test_parser.ml
  Build$: flag(tests)
  Custom: true
  CompiledObject: best
  Install: false
  BuildDepends: imap, oUnit (>= 2.0.0)

Executable test_set
  Path: lib_test
  MainIs: test_set.ml
  Build$: flag(tests)
  Custom: true
  CompiledObject: best
  Install: false
  BuildDepends: imap, oUnit (>= 2.0.0)

Executable test_mutf7
  Path: lib_test
  MainIs: test_mutf7.ml
  Build$: flag(tests)
  Custom: true
  CompiledObject: best
  Install: false
  BuildDepends: imap, oUnit (>= 2.0.0)

Executable test_live
  Path: lib_test
  MainIs: test_live.ml
  Build$: flag(tests)
  Custom: true
  CompiledObject: best
  Install: false
  BuildDepends: imap.lwt, oUnit (>= 2.0.0)

Executable test_io
  Path: lib_test
  MainIs: test_io.ml
  Build$: false # flag(tests)
  Custom: true
  CompiledObject: best
  Install: false
  BuildDepends: imap.unix, oUnit (>= 2.0.0)

Executable test_condstore
  Path: lib_test
  MainIs: test_condstore.ml
  Build$: flag(tests)
  Custom: true
  CompiledObject: best
  Install: false
  BuildDepends: imap.lwt, oUnit (>= 2.0.0)

Executable test_id
  Path: lib_test
  MainIs: test_id.ml
  Build$: flag(tests)
  Custom: true
  CompiledObject: best
  Install: false
  BuildDepends: imap.lwt, oUnit (>= 2.0.0)

Executable test_namespace
  Path: lib_test
  MainIs: test_namespace.ml
  Build$: flag(tests)
  Custom: true
  CompiledObject: best
  Install: false
  BuildDepends: imap, oUnit (>= 2.0.0)

Test test_parser
  Run$: flag(tests)
  Command: $test_parser
  WorkingDirectory: lib_test

Test test_set
  Run$: flag(tests)
  Command: $test_set
  WorkingDirectory: lib_test

Test test_mutf7
  Run$: flag(tests)
  Command: $test_mutf7
  WorkingDirectory: lib_test

Test test_live
  Run$: flag(tests)
  Command: $test_live -runner sequential
  WorkingDirectory: lib_test

Test test_io
  Run$: flag(tests)
  Command: $test_io -runner sequential
  WorkingDirectory: lib_test

Test test_condstore
  Run$: flag(tests)
  Command: $test_condstore
  WorkingDirectory: lib_test

Test test_id
  Run$: flag(tests)
  Command: $test_id -runner sequential
  WorkingDirectory: lib_test

Test test_namespace
  Run$: flag(tests)
  Command: $test_namespace -runner sequential
  WorkingDirectory: lib_test
